# Load and clean the data

import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import LabelEncoder

# Load uploaded file

file_name = next(iter(uploaded))
df = pd.read_excel(file_name)

df.replace(['-', '?'], np.nan, inplace=True)    # Clean the dataset

df.drop(columns=['FIRST_NAME', 'LAST_NAME', 'EMAIL', 'PHONE_NUMBER', 'HIRE_DATE'], inplace=True)    # Drop irrelevant columns

# Convert to numeric types

df['SALARY'] = pd.to_numeric(df['SALARY'], errors='coerce')
df['COMMISSION_PCT'] = pd.to_numeric(df['COMMISSION_PCT'], errors='coerce')
df['MANAGER_ID'] = pd.to_numeric(df['MANAGER_ID'], errors='coerce')
df['DEPARTMENT_ID'] = pd.to_numeric(df['DEPARTMENT_ID'], errors='coerce')

df.dropna(subset=['SALARY', 'JOB_ID'], inplace=True)         # Drop rows missing essential fields

# Fill remaining nulls

df['MANAGER_ID'].fillna(df['MANAGER_ID'].median(), inplace=True)
df['DEPARTMENT_ID'].fillna(df['DEPARTMENT_ID'].median(), inplace=True)

# Encode JOB_ID

le = LabelEncoder()
df['JOB_ID'] = le.fit_transform(df['JOB_ID'])

# Prepare features and target

X = df[['JOB_ID', 'MANAGER_ID', 'DEPARTMENT_ID']]
y = df['SALARY']

# Train model

model = LinearRegression()
model.fit(X, y)

print("âœ… Model Trained Successfully")
